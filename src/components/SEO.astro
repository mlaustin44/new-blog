---
export interface Props {
  title: string;
  description?: string;
  canonical?: string;
  image?: string;
  imageAlt?: string;
  type?: 'website' | 'article';
  author?: string;
  publishedTime?: Date;
  modifiedTime?: Date;
  tags?: string[];
}

const {
  title,
  description = "Matthew Austin's Blog - Software engineering, automation, and technical insights",
  canonical,
  image = '/og-image.jpg', // You'll want to create a default OG image
  imageAlt = 'Matthew Austin Blog',
  type = 'website',
  author,
  publishedTime,
  modifiedTime,
  tags = []
} = Astro.props;

const siteTitle = title === 'Matthew Austin' ? title : `${title} | Matthew Austin`;
const canonicalURL = canonical ? new URL(canonical, Astro.site) : new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image, Astro.site);
---

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>
<meta name="title" content={siteTitle} />
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={siteTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL} />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:site_name" content="Matthew Austin" />
<meta property="og:locale" content="en_US" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={siteTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL} />
<meta property="twitter:image:alt" content={imageAlt} />

<!-- Article specific meta tags -->
{type === 'article' && (
  <>
    {author && <meta property="article:author" content={author} />}
    {publishedTime && <meta property="article:published_time" content={publishedTime.toISOString()} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime.toISOString()} />}
    {tags.map(tag => <meta property="article:tag" content={tag} />)}
    <meta property="article:section" content="Technology" />
  </>
)}

<!-- Additional SEO -->
<meta name="robots" content="index, follow" />
<meta name="author" content={author || "Matthew Austin"} />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'article' ? "BlogPosting" : "WebSite",
  "headline": title,
  "description": description,
  "url": canonicalURL.toString(),
  "image": imageURL.toString(),
  "author": {
    "@type": "Person",
    "name": author || "Matthew Austin",
    "url": "https://matthewlaustin.com"
  },
  "publisher": {
    "@type": "Person",
    "name": "Matthew Austin",
    "url": "https://matthewlaustin.com"
  },
  ...(type === 'article' && publishedTime && {
    "datePublished": publishedTime.toISOString(),
    "dateModified": modifiedTime ? modifiedTime.toISOString() : publishedTime.toISOString(),
    "keywords": tags.join(', ')
  })
})} />